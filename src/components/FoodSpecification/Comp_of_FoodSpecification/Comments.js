import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import CssBaseline from '@material-ui/core/CssBaseline';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import IconButton from '@material-ui/core/IconButton';
import Paper from '@material-ui/core/Paper';
import Fab from '@material-ui/core/Fab';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import ListSubheader from '@material-ui/core/ListSubheader';
import Avatar from '@material-ui/core/Avatar';
import MenuIcon from '@material-ui/icons/Menu';
import AddIcon from '@material-ui/icons/Add';
import SearchIcon from '@material-ui/icons/Search';
import MoreIcon from '@material-ui/icons/MoreVert';
import { Grid } from '@material-ui/core';
import TextField from '@material-ui/core/TextField';
import AccountCircle from '@material-ui/icons/AccountCircle';
import SendIcon from '@material-ui/icons/Send';
import Button from '@material-ui/core/Button';
import Icon from '@material-ui/core/Icon';
import { useState } from 'react';
import { SettingsInputCompositeOutlined } from '@material-ui/icons';
import { deepOrange} from '@material-ui/core/colors'
import CommentPass from './CommentPass';

const messages = [
  {
    id: 1,
    primary: 'nazmulustc09@gmail.com',
    secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    primary: 'nazmulustc09@gmail.com',
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    primary: 'nazmulustc09@gmail.com',
    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
    person: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    primary: 'nazmulustc09@gmail.com',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    primary: "nazmulustc09@newazkitchen.com",
    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
    person: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    primary: 'nazmulustc09@outlook.com',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    primary: 'nazmulustc09@yahoo.com',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: '/static/images/avatar/1.jpg',
  },
];

const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    // paddingBottom: 50,
    // height:"80vh",
    // overflow:"scroll",
    
    
  },
  list: {
    marginBottom: theme.spacing(2),
    
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  appBar: {
    top: 'auto',
    bottom: 0,
  },
  grow: {
    flexGrow: 1,
  },
  fabButton: {
    position: 'absolute',
    zIndex: 1,
    top: -30,
    left: 0,
    right: 0,
    margin: '0 auto',
  },
  margin: {
    margin: theme.spacing(1),
    
  },
   button: {
    margin: theme.spacing(1),
  },
  small: {
    width: theme.spacing(3),
    height: theme.spacing(3),
    marginTop: "16px",
  },
  active_avatar:{
    width: theme.spacing(3),
    height: theme.spacing(3),
    marginTop: "16px",
    color: theme.palette.getContrastText(deepOrange[500]),
    backgroundColor: deepOrange[500],
  }
}));

export default function Comments({comment,handleRating}) {
  console.log(comment?.filter(item=>item.comment!==null?item.comment:null).map(item=>item.comment))
  const classes = useStyles();

  const [comments, setComments]=useState({})

  const userInfo=JSON.parse(sessionStorage.getItem('userInfo'))


const handleInput=(e)=>{
  setComments({...comments,[e.target.name]:e.target.value})
}

const submitComment=()=>{
  if(userInfo){
      console.log('user has logged in')
  }else{
    
  }
  console.log(comments)
}
const unknown="uk"

  return (
    <div>
      {/* <CssBaseline /> */}
      <Paper square className="cont_comments">
        <Typography className={classes.text} variant="h5" gutterBottom>
          Comments
        </Typography>

      {comment?.length>0 ? <List className={classes.list}>
        {/* {messages.map(({ id, primary, secondary, person }) => ( */}
          {comment?.reverse().filter(item=>item.comment!==null?item.comment:null).map((item,ind)=>(
          <div key={Math.random()}>
          
            {/* {item.date === new Date().toDateString()  && <ListSubheader className={classes.subheader}>Today</ListSubheader>}
            {item.date === new Date((new Date()).valueOf() - 1000*60*60*24).toDateString() && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}
            {item.date === new Date((new Date()).valueOf() - 1000*60*60*48).toDateString() && <ListSubheader className={classes.subheader}>{new Date((new Date()).valueOf() - 1000*60*60*48).toDateString()}</ListSubheader>} */}

            <em style={{color:'whitesmoke',fontSize:"10px",padding:'20px'}}>{item.date}</em>
            <ListItem button>
            
              <ListItemAvatar>
                <Avatar src={item.email!==null?item.email[0]:"https://images.clipartlogo.com/files/istock/previews/9420/94202953-male-unknown-user-social-icon-isolated-vector-image.jpg"} alt={item.email!==null && item.email[0]} />
                {/* <Avatar src={item.email[0]}  /> */}
              </ListItemAvatar>
              <ListItemText primary={item.email} secondary={item.comment} />
            </ListItem>
            {console.log('render')}
          </div>
        ))}

        
      </List>:<span style={{color:'tomato',padding:'20px'}}>please comment bellow</span> }

          
        
      </Paper>
          {/* <Fab color="secondary" aria-label="add" >
            <AddIcon />
          </Fab> */}

          
          {/* //!replace comments sectuin */}
          <CommentPass handleRating={handleRating}/>
          

      
      {/* <AppBar position="fixed" color="primary" className={classes.appBar}>
        <Toolbar>
          <IconButton edge="start" color="inherit" aria-label="open drawer">
            <MenuIcon />
          </IconButton>
          <Fab color="secondary" aria-label="add" className={classes.fabButton}>
            <AddIcon />
          </Fab>
          <div className={classes.grow} />
          <IconButton color="inherit">
            <SearchIcon />
          </IconButton>
          <IconButton edge="end" color="inherit">
            <MoreIcon />
          </IconButton>
        </Toolbar>
      </AppBar> */}


      {/* <RatingReview
            display={dispRating} 
            handleClose={handleClose}
            rating={rating}
            foodId={foodId}
            /> */}

    </div>
  );
}
